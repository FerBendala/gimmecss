@use "sass:math";

.tools {
    // Header
    &-header {
        &__title {
            margin-bottom: em(16);

            font-size: em(40);
            font-weight: bold;
        }
    }

    // Result
    &-result {
        @include position(sticky, $t: 0);

        height: em(216);
        padding: em(48) em(32) em(32);
        margin-bottom: em(40);
        border-radius: $border-radius * 2;
        box-shadow: 0 em(-32) 0 em(8) $color-gray--light;
        overflow: hidden;

        background-color: $color-black;

        z-index: 1;
        // Reset button
        &__reset {
            @include position(absolute, $t: 0, $r: 0);
            @include flex($ai: center, $jc: center);

            width: em(200);
            height: em(40);
            border: none;
            border-radius: 0 0 0 math.div($border-radius, 2);

            background-color: $color-red;
            color: $color-white;

            font-size: em(11);
            font-weight: 700;
            text-transform: uppercase;
            letter-spacing: em(2);

            cursor: pointer;
            transition: $transition;

            // Icon
            &:before {
                @include background-image($image: '#{$path-image}/svg/trash.svg', $bs: contain, $bp: left center);

                display: block;
                width: em(24);
                max-width: em(24);
                height: em(24);
                max-height: em(24);
                margin-right: em(8);

                content: '';
            }

            // Hover
            &:hover {
                background-color: darken($color-red, 24%);
            }
        }

        // badge
        &__badge {
            @include position(absolute, $t: 0, $l: em(32));
            @include flex($ai: center, $jc: center);

            width: em(112);
            height: em(40);
            border-radius: 0 0 math.div($border-radius, 2) math.div($border-radius, 2);

            background-color: $color-red;
            color: $color-white;

            font-size: em(11);
            font-weight: 700;
            text-transform: uppercase;
            letter-spacing: em(2);

            pointer-events: none;
        }

        // badge
        &__view {
            @include flex($ai: center, $jc: center);

            width: 100%;
            height: 100%;
            border-radius: $border-radius;
        }
    }

    // Container
    &-container {
        @include grid($gc: minmax(0, 2fr) em(300), $gg: em(40));
    }

    // Options
    &-options {
        // Settings
        &__settings {
            // Backrgound gradient
            &--background-gradient {
                @include grid($gc: repeat(2, minmax(0, 1fr)), $gg: em(24));
                #grapick {
                    @include grid-child($gcs: 1, $gce: 3);
                }
            }
            &--background-noise {
                @include grid($gc: repeat(2, minmax(0, 1fr)), $gg: em(24));
                .input-color {
                    @include grid-child($gcs: 1, $gce: 3);
                }
                input[type='number'] {
                    margin-bottom: em(8);
                }
            }
            // Box shadow
            &--box-shadow {
                @include grid($gc: repeat(2, minmax(0, 1fr)), $gg: em(24));
                .background-color,
                .switch,
                label[for='background-color'] {
                    @include grid-child($gcs: 1, $gce: 3);
                }
                input[type='number'],
                input[type='range'],
                .switch {
                    margin-bottom: em(8);
                }
                .opacity {
                    @include flex($ai: center);

                    height: em(56);
                }
            }
            // Border radius
            &--border-radius {
                @include grid($gc: repeat(2, minmax(0, 1fr)), $gg: em(24));
                input[type='color'],
                select {
                    @include grid-child($gcs: 1, $gce: 3);
                }
                input[type='number'],
                input[type='range'] {
                    margin-bottom: em(8);
                }
            }
            // CSS arrow
            &--css-arrow {
                @include grid($gc: repeat(2, minmax(0, 1fr)), $gg: em(24));
                .radio__group {
                    @include grid-child($gcs: 1, $gce: 3);
                }
                input[type='range'],
                input[type='number'] {
                    margin-bottom: em(8);
                }
                .radio__group {
                    margin-bottom: em(16);
                }
            }
            // Text gradient
            &--text-gradient {
                @include grid($gc: repeat(2, minmax(0, 1fr)), $gg: em(24));
                > input,
                div {
                    @include grid-child($gcs: 1, $gce: 3);
                }
                input[type='number'],
                input[type='range'] {
                    margin-bottom: em(8);
                }
            }
            // Text gradient
            &--text-shadow {
                @include grid($gc: repeat(2, minmax(0, 1fr)), $gg: em(24));
                input[type='text'],
                .background-color,
                .blur,
                label[for='text-color'] {
                    @include grid-child($gcs: 1, $gce: 3);
                }
                .opacity {
                    @include flex($ai: center);

                    height: em(56);
                }
                input[type='number'],
                input[type='range'] {
                    margin-bottom: em(8);
                }
            }
            // Font styler
            &--font-styler {
                @include grid($gc: repeat(2, minmax(0, 1fr)), $gg: em(24));
                #text-decoration,
                input[type='text'] {
                    @include grid-child($gcs: 1, $gce: 3);
                }
                input[type='number'],
                input[type='range'] {
                    margin-bottom: em(8);
                }
            }
            // Font face
            &--font-face {
                @include grid($gc: repeat(3, minmax(0, 1fr)), $gg: em(24));
            }
        }

        // Code
        &__code {
            @include position(relative);

            margin-top: em(40);
            margin-bottom: em(32);
            border-radius: $border-radius * 2;
            overflow: hidden;

            // Code view
            .hljs {
                padding: em(48) em(32) em(32);

                background-color: $color-black;
                color: $color-gray--light;

                white-space: break-spaces;

                // Class
                &-selector-class,
                &-selector-pseudo {
                    color: #ffc929;
                }

                // Pseudo class
                &-number {
                    color: #ff9800;
                }

                // Function
                &-built_in {
                    color: #ffe500;
                }

                // Attributes
                &-attribute {
                    color: #0ee4ff;
                }

                // String
                &-string {
                    color: $color-green;
                }

                // Keyword
                &-keyword {
                    color: #ff50e2;
                }
            }

            // badge
            &__badge {
                @include position(absolute, $t: 0, $l: em(32));
                @include flex($ai: center, $jc: center);

                width: em(112);
                height: em(40);
                border-radius: 0 0 math.div($border-radius, 2) math.div($border-radius, 2);

                background-color: $color-red;
                color: $color-white;

                font-size: em(11);
                font-weight: 700;
                text-transform: uppercase;
                letter-spacing: em(2);

                pointer-events: none;
            }

            // Copy button
            &__copy {
                @include position(absolute, $t: 0, $r: 0);
                @include flex($ai: center, $jc: center);

                width: em(312);
                height: em(40);
                border: none;
                border-radius: 0 0 0 math.div($border-radius, 2);

                background-color: $color-red;
                color: $color-white;

                font-size: em(11);
                font-weight: 700;
                text-transform: uppercase;
                letter-spacing: em(2);

                cursor: pointer;
                transition: $transition;

                // Icon
                &:before {
                    @include background-image($image: '#{$path-image}/svg/copy.svg', $bs: contain, $bp: left center);

                    display: block;
                    width: em(24);
                    max-width: em(24);
                    height: em(24);
                    max-height: em(24);
                    margin-right: em(8);

                    content: '';
                }

                // Hover
                &:hover {
                    background-color: darken($color-red, 24%);
                }
            }
        }

        // Box
        .box {
            &__text {
                margin: 0;
            }
        }
    }
}
