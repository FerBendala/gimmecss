body {
    @include position(relative);
    @include flex($ai: stretch);

    width: 100%;

    background-color: $color-gray--light;
    color: $color-black;

    font-size: rem(16);
    font-family: $font-family;
    font-weight: normal;
    line-height: 1.6;

    // Responsive
    @include media(tablet) {
        font-size: 80%;
    }

    // Basics
    * {
        box-sizing: border-box;
        text-rendering: optimizeLegibility;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
        -webkit-tap-highlight-color: transparent;
        &:focus {
            outline: none;
        }
    }
    ::selection {
        background: lighten($color-red, 24%);
    }

    // Image
    img {
        max-width: 100%;
    }

    // Strong
    strong {
        font-weight: 600;
    }

    // Links
    a {
        color: $color-black;

        text-decoration: none;

        transition: $transition;
        &:hover {
            color: $color-red;
        }
    }

    // Input text
    input[type='text'],
    input[type='number'] {
        @include placeholder($c: $color-black, $o: 1, $ff: $font-family);

        width: 100%;
        height: em(40);
        padding: em(16) em(24);
        border: none;
        border-radius: $border-radius * 2;
        box-shadow: $box-shadow;

        font-family: $font-family;
        font-size: em(16);

        transition: box-shadow $transition;

        // Hover & focus
        &:hover:not(:disabled),
        &:focus:not(:disabled) {
            box-shadow: $box-shadow, $box-shadow, $box-shadow;
        }
    }

    // Input type color
    .input-color {
        @include position(relative);

        display: block;
        height: em(56);

        // Text
        &__text {
            @include position(absolute, $t: 50%, $l: em(24));

            transform: translateY(-50%);

            font-weight: 600;
        }

        // Input type color
        input[type='color'] {
            width: 100%;
            height: em(56);
            padding: 0;
            border: em(6) solid $color-white;
            border-radius: $border-radius * 2;
            box-shadow: $box-shadow;
            overflow: hidden;
    
            font-size: em(16);
    
            appearance: none;
            cursor: pointer;
            transition: box-shadow $transition;
    
            // Hover & focus
            &:hover:not(:disabled),
            &:focus:not(:disabled) {
                box-shadow: $box-shadow, $box-shadow, $box-shadow;
            }
    
            // Real color picker
            &::-webkit-color-swatch {
                width: 100%;
                height: em(56);
                margin-top: em(-16);
                margin-left: em(-16);
                margin-right: em(-16);
                border: none;
                border-radius: $border-radius;
            }
        }
    }
    

    // Input range
    input[type='range'] {
        width: 100%;

        background: transparent;
        font-size: em(16);

        appearance: none;

        &::-webkit-slider-runnable-track {
            width: 100%;
            height: em(4);
            border-radius: $border-radius;
            box-shadow: $box-shadow;

            background: $color-white;

            cursor: pointer;
            &:hover:not(:disabled) {
                box-shadow: $box-shadow $box-shadow;
            }
        }

        &::-webkit-slider-thumb {
            height: em(24);
            width: em(24);
            margin-top: em(-10);
            border-radius: $border-radius * 2;
            box-shadow: $box-shadow;

            background: $color-red;

            cursor: pointer;
            appearance: none;

            &:hover:not(:disabled),
            &:focus:not(:disabled) {
                box-shadow: $box-shadow $box-shadow $box-shadow;
            }
        }
    }

    // Switch button
    .switch {
        @include flex($ai: center);

        // Checkbox & behaviour
        &__checkbox {
            display: none;
            &:checked {
                + .switch__label {
                    background-color: $color-green;
                    &:before {
                        transform: translateX(#{em(24)});
                    }
                }

                // Text
                ~ .switch__text {
                    &:before {
                        content: 'Inset shadow';
                    }
                }
            }
        }

        // Fake button
        &__label {
            @include position(relative);

            display: inline-block;
            width: em(48);
            height: em(24);
            border-radius: em(24);

            background-color: $color-red;

            cursor: pointer;
            transition: $transition;

            // Button
            &:before {
                @include position(absolute, $t: em(2), $l: em(2));

                display: block;
                width: em(20);
                height: em(20);
                border-radius: 50%;
                box-shadow: $box-shadow;

                background-color: $color-white;

                content: '';
                transition: $transition;
            }
        }

        // Text
        &__text {
            margin-left: em(16);
            &:before {
                content: 'Offset shadow';
            }
        }
    }

    // Radio button
    .radio {
        &__group {
            @include grid($gc: repeat(4, (minmax(0, 1fr))), $gg: em(24));
        }
        &__container {
            @include flex($ai: center, $jc: flex-start);

            height: em(48);
            padding: em(8) em(16);
            border-radius: $border-radius * 3;
            box-shadow: $box-shadow;

            background-color: $color-white;

            cursor: pointer;
            transition: $transition;

            &:hover:not(:disabled) {
                box-shadow: $box-shadow, $box-shadow;
            }
        }
        &__button {
            @include position(relative);
            @include flex($ai: center, $jc: center);

            width: em(24);
            height: em(24);
            padding-left: em(40);
            font-size: em(16);

            cursor: pointer;
            user-select: none;

            /* Hide the browser's default radio button */
            &__hide {
                @include position(absolute);

                width: 0;
                height: 0;
                opacity: 0;

                cursor: pointer;

                // Checked
                &:checked {
                    + .radio__button__checkmark {
                        background-color: $color-red;

                        &:after {
                            @include position(absolute, $t: em(8), $l: em(8));

                            display: block;
                            width: em(8);
                            height: em(8);
                            border-radius: 50%;

                            background: $color-white;
                        }
                    }
                }

                // Hover
                &:hover:not(:checked):not(:disabled) {
                    + .radio__button__checkmark {
                        background-color: $color-red;
                    }
                }
            }

            /* Create a custom radio button */
            &__checkmark {
                @include position(absolute, $t: 0, $l: 0);

                height: em(24);
                width: em(24);
                background-color: $color-gray--light;
                border-radius: 50%;

                transition: $transition;

                &:after {
                    @include position(absolute);

                    display: none;

                    content: '';
                }
            }
        }
    }

    // Select
    select {
        @include background-image($image: '#{$path-image}/svg/chevron.svg', $bs: em(24), $bp: right em(16) center);

        width: 100%;
        height: em(40);
        padding: em(8) em(24);
        border: none;
        border-radius: $border-radius * 2;
        box-shadow: $box-shadow;

        font-family: $font-family;
        font-size: em(16);

        cursor: pointer;
        transition: $transition;
        appearance: none;

        // Hover & focus
        &:hover:not(:disabled),
        &:focus:not(:disabled) {
            box-shadow: $box-shadow, $box-shadow, $box-shadow;
        }
    }

    // Gradient picker
    #grapick {
        .grp {
            // Container
            &-wrapper {
                height: em(56) !important;
                margin-bottom: em(48);
                border: em(8) solid $color-white;
                border-radius: $border-radius * 2;
                box-shadow: $box-shadow;

                transition: $transition;

                // Hover & focus
                &:hover,
                &:focus {
                    box-shadow: $box-shadow, $box-shadow, $box-shadow;
                }
            }

            // Preview
            &-preview {
                height: em(56) - em(16);
                border-radius: $border-radius;
            }

            // Handler
            &-handler {
                top: em(-24) !important;

                filter: drop-shadow(0 em(2) em(2) rgba(0, 0, 0, 0.08));
                // Close
                &-close {
                    @include position(relative, $t: em(6));
                    @include flex($ai: flex-start, $jc: center);
                    width: em(16);
                    height: em(16);
                    &-c {
                        @include position(relative, $t: em(2), $r: em(6));
                        @include flex($ai: center, $jc: center);

                        background: white;
                        width: em(16);
                        height: em(16);
                        border-radius: $border-radius;

                        line-height: 0;

                        cursor: pointer;
                    }
                }

                // Drag
                &-drag {
                    width: em(4);
                    height: em(72);

                    background-color: $color-white;

                    cursor: col-resize;
                }

                // Color picker
                &-cp {
                    // Color
                    &-c {
                    }

                    // Color picker container
                    &-wrap {
                        @include position(relative, $r: em(10));

                        width: em(24);
                        height: em(24);
                        border: em(4) solid $color-white;
                        border-radius: em(16);

                        appearance: none;
                        input[type='color'] {
                            @include position(relative, $t: em(-4), $r: em(4));

                            width: em(24);
                            height: em(24);
                            opacity: 0;

                            font-size: em(16);

                            cursor: pointer;
                        }
                    }
                }
            }
        }
    }

    // Container
    .container {
        @include container;
    }

    // Content
    .content {
        width: 100%;
        padding: em(24);
        min-height: 100vh;
        max-height: 100vh;
        overflow: auto;

        transition: all 0.3s;
        scroll-behavior: smooth;
    }
}
